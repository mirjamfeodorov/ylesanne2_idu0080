package ee.ttu.idu0080.hinnakiri;

/**
 * Klient hinnakirja teenusele
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;

import javax.xml.ws.soap.SOAPFaultException;

import ee.ttu.idu0080.hinnakiri.exceptions.*;
import ee.ttu.idu0080.hinnakiri.service.HinnakiriService;
import ee.ttu.idu0080.hinnakiri.service.HinnakiriService_Service;
import ee.ttu.idu0080.hinnakiri.types.GetHinnakiriResponse;
import ee.ttu.idu0080.hinnakiri.types.Hinnakiri;
import ee.ttu.idu0080.hinnakiri.types.Hinnakiri.HinnakirjaRida;

/**
 * This class was generated by Apache CXF 2.2.6 Thu Mar 04 16:26:57 EET 2010
 * Generated source version: 2.2.6
 * 
 */

public final class Klient {
/*
	public static void main(String args[]) throws Exception {
		URL wsdlURL = parseArguments(args);

		ArrayList <String> numbrid = new ArrayList();
		numbrid.add("12.00A");
		numbrid.add("12A");
		numbrid.add("12.34");
		numbrid.add("12.340");
		numbrid.add("12.345");
		numbrid.add("12.0");
		numbrid.add("-12.00");
		numbrid.add("0.000");

		GetHinnakiriResponse response = null;
		for (String object: numbrid)
		{
			try {
				HinnakiriService_Service service = new HinnakiriService_Service(
						wsdlURL);
				HinnakiriService port = service.getHinnakiriPort();
				response = port.getHinnakiri(object);
				if(response != null)
					printToConsole(response.getHinnakiri());
				
			} catch(HinnakiriNumberFormatException e) {
				System.out.println("Hind ei ole numbrilises formaadis: " + object);
			} catch(HinnakiriZeroNumberFormatException e) {
				System.out.println("Hind on null: " + object);
			} catch(HinnakiriDecimalNumberFormatException e) {
				System.out.println("Hind on vale koma kohtade arvuga: " + object);//: " + e);
			} catch(HinnakiriNegNumberFormatException e) {
				System.out.println("Hind on negatiivne: " + object);
			} catch(SOAPFaultException e){
				System.out.println("SOAPFaultException: "+ object);
			} catch (javax.xml.ws.WebServiceException e){
				System.out.println("Yhenduse viga: " + e);
			}
			catch (Exception e){
				System.out.println("Yldine viga: " + e);
			}
		}
	}

*/	
	public static void main(String args[]) throws Exception {
		URL wsdlURL = parseArguments(args);


		GetHinnakiriResponse response = null;
		for (int i = 0; i < 10; i++)
		{
			//String object = "12.00A";
			String object = "12A";
			//String object = "12.34";
			//String object = "12.340";
			//String object = "12.345";
			//String object = "12.0";
			//String object = "-12.00";
			//String object = "0";
			//String object = "0.0";
			//String object = "0.00";
			//String object = "0.000";
			try {
				HinnakiriService_Service service = new HinnakiriService_Service(
						wsdlURL);
				HinnakiriService port = service.getHinnakiriPort();

				response = port.getHinnakiri(object);
				if(response != null)
					printToConsole(response.getHinnakiri());
				
			} catch(HinnakiriNumberFormatException e) {
				System.out.println("Hind ei ole numbrilises formaadis: " + object);
			} catch(HinnakiriZeroNumberFormatException e) {
				System.out.println("Hind on null: " + object);
			} catch(HinnakiriDecimalNumberFormatException e) {
				System.out.println("Hind on vale koma kohtade arvuga: " + object);
			} catch(HinnakiriNegNumberFormatException e) {
				System.out.println("Hind on negatiivne: " + object);
			} catch(SOAPFaultException e){
				System.out.println("SOAPFaultException: "+ object);
			} catch (javax.xml.ws.WebServiceException e){
				System.out.println("Yhenduse viga: " + e);
				continue;
			}
			catch (Exception e){
				System.out.println("Yldine viga: " + e);
			}
			break;
		}
	}
	
	
	/**
	 * Prindib konsoolile hinnakirja
	 * 
	 * @param hinnakiri
	 */
	private static void printToConsole(Hinnakiri hinnakiri) {

		System.out.println("Hinnakiri:");

		for (HinnakirjaRida hinnakirjaRida : hinnakiri.getHinnakirjaRida()) {
			StringBuilder outRida = new StringBuilder();
			outRida.append(hinnakirjaRida.getToode().getKood());
			outRida.append("\t");
			outRida.append(hinnakirjaRida.getToode().getNimetus());
			outRida.append("\t");
			outRida.append(hinnakirjaRida.getHind().getSumma());
			outRida.append(" ");
			outRida.append(hinnakirjaRida.getHind().getValuuta());

			System.out.println(outRida);
		}
	}

	/**
	 * Parsib välja programmi argumentide hulgast WSDL-i URL-i
	 * 
	 * @param args
	 *            argumendid
	 * @return URL
	 */
	private static URL parseArguments(String[] args) {

		URL wsdlURL = HinnakiriService_Service.WSDL_LOCATION;

		try {
			if (args.length > 0) {
				String firstArg = args[0];

				if (firstArg.startsWith("http:")) {
					wsdlURL = new URL(firstArg);
				} else {
					File wsdlFile = new File(firstArg);
					if (wsdlFile.exists()) {
						wsdlURL = wsdlFile.toURI().toURL();
					} else {
						wsdlURL = new URL(firstArg);
					}
				}
			}

		} catch (MalformedURLException e) {
			e.printStackTrace();
		}

		return wsdlURL;
	}

}
